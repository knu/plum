# $Id$
# copyright (c)1998-2000 Yoshinori Hasegawa <hasegawa@madoka.org>

package auto_reply;

$_ = 'auto_reply';

sub initialize {
  $FORMAT = '#(message)';
}

sub ss_privmsg {
  local($serverno, $prefix, $cmd, @params) = @_;
  local($userno, $mtime, $file, $idx, $name, $code, $req, $rep, $rate, @list, %alias, $regex, $to, $str, @format);
  $userno = $'userno[$serverno];
  $file = &'property($userno, 'file') || '';
  if (($idx = rindex($file, ';')) != -1) {
    $name = substr($file, 0, $idx);
    $code = substr($file, $idx + 1);
  } else {
    $name = $file;
    $code = '';
  }
  $name = &'expand($name);
  if ($name) {
    $mtime = (stat($name))[9];
    if (defined($mtime) && ($modify[$userno] || 0) != $mtime) {
      $modify[$userno] = $mtime;
      &read_data($userno);
    }
  }
  ($req, @reply) = split(/\s+/, $params[1]);
  if (@reply) {
    foreach $add (&'property($userno, 'add')) {
      next unless &match($req, $add);
      &add_file($userno, @reply);
      return ($prefix, $cmd, @params);
    }
    foreach $remove (&'property($userno, 'remove')) {
      next unless &match($req, $remove);
      &remove_file($userno, @reply);
      return ($prefix, $cmd, @params);
    }
    foreach $change (&'property($userno, 'change')) {
      next unless &match($req, $change);
      &change_file($userno, @reply);
      return ($prefix, $cmd, @params);
    }
  }
  $rate = &'property($userno, 'rate');
  if (rand(100) < $rate) {
    foreach $str (&'array($message[$userno])) {
      ($req, $rep) = &parse($str);
      foreach $text (&'array($req)) {
        next unless &match($params[1], $text);
        @list = &'array($rep);
        $str = $list[rand(@list)];
        %alias = &get_alias_user($userno, $prefix);
        $alias{'nick.now'} = (&'prefix($prefix))[0];
        $alias{'message'} = &'format($str, %alias);
        if (&'channel($params[0])) {
          $alias{'channel'} = $params[0];
          $to = $params[0];
        } else {
          $to = &'prefix($prefix);
        }
        @format = &'property($userno, 'format');
        if (@format) {
          foreach $reply (@format) {
            &privmsg($serverno, $to, &'format($reply, %alias));
          }
        } else {
          &privmsg($serverno, $to, &'format($FORMAT, %alias));
        }
        return ($prefix, $cmd, @params);
      }
    }
  }
  return ($prefix, $cmd, @params);
}

sub match {
  local($str, $pattern) = @_;
  if (&'exist($'kanjilist, 'sjis')) {
    $str = &'euc_sjis($str);
    $pattern = &'euc_sjis($pattern);
  }
  if ($str =~ /$pattern/) {
    return 1;
  } else {
    return 0;
  }
}

sub privmsg {
  local($serverno, $to, $msg) = @_;
  &'s_print($serverno, '', 'PRIVMSG', $to, $msg);
  foreach $cno (&'array($'clientlist)) {
    next unless $'server[$cno] == $serverno;
    &'c_print($cno, &'user($cno), 'PRIVMSG', $to, $msg);
  }
}

sub parse {
  local($str) = @_;
  local($left, $right, $req, $rep);
  ($left, $right) = split(/\s+\:\s+/, $str);
  $req = &'list(split(/\s+/, $left || ''));
  $rep = &'list(split(/\s+/, $right || ''));
  return ($req, $rep);
}

sub add_file {
  local($userno, $req, @reply) = @_;
  local(@array, $line, $recv, $send, $i);
  @array = &'array($message[$userno]);
  for ($i = 0; $i < @array; $i++) {
    ($recv, $send) = &parse($array[$i]);
    next unless &'exist($recv, $req);
    $array[$i] = join(' ', &'array($recv)) . ' : ' . join(' ', &'array(&'add($send, @reply)));
    $message[$userno] = &'list(@array);
    &write_file($userno);
    return;
  }
  push(@array, $req . ' : ' . join(' ', @reply));
  $message[$userno] = &'list(@array);
  &write_file($userno);
}

sub remove_file {
  local($userno, $req, @reply) = @_;
  local(@array, $line, $recv, $send, $i);
  @array = &'array($message[$userno]);
  for ($i = 0; $i < @array; $i++) {
    ($recv, $send) = &parse($array[$i]);
    next unless &'exist($recv, $req);
    $send = &'remove($send, @reply);
    if ($send) {
      $array[$i] = join(' ', &'array($recv)) . ' : ' . join(' ', &'array($send));
    } else {
      splice(@array, $i, 1);
    }
    last;
  }
  $message[$userno] = &'list(@array);
  &write_file($userno);
}

sub change_file {
  local($userno, $req, @reply) = @_;
  local(@array, $line, $recv, $send, $i);
  @array = &'array($message[$userno]);
  for ($i = 0; $i < @array; $i++) {
    ($recv, $send) = &parse($array[$i]);
    next unless &'exist($recv, $req);
    $array[$i] = join(' ', &'array($recv)) . ' : ' . join(' ', &'array(&'change($send, @reply)));
    last;
  }
  $message[$userno] = &'list(@array);
  &write_file($userno);
}

sub read_data {
  local($userno) = @_;
  local($name, $code, $line);
  ($name, $code) = &filename(&'property($userno, 'file'));
  if ($name && open(FILE, $name)) {
    undef($message[$userno]);
    while (defined($line = <FILE>)) {
      $line =~ tr/\r\n//d;
      next unless $line;
      $line = &code_euc($line, $code) if $code;
      $message[$userno] = &'add($message[$userno], $line);
    }
    close(FILE);
  }
}

sub write_file {
  local($userno) = @_;
  local($name, $code);
  ($name, $code) = &filename(&'property($userno, 'file'));
  if ($name && open(FILE, ">$name")) {
    foreach $line (&'array($message[$userno])) {
      $line = &euc_code($line, $code) if $code;
      print FILE $line, "\n";
    }
    close(FILE);
  }
}

sub get_alias_user {
  local($userno, $from, $prefix) = @_;
  local($file, @list);
  $file = &'property($userno, 'alias');
  foreach $list (&split_list('nick', &read_file($file))) {
    @list = &'array($list);
    if (&match_alias_user($from, @list)) {
      return &parse_alias($prefix, @list);
    }
  }
  return ();
}

sub match_alias_user {
  local($from, @list) = @_;
  local($var, $arg, $regex);
  foreach $line (@list) {
    ($var, $arg) = split(/\s+/, $line, 2);
    next unless "\L$var\E" eq 'user';
    $regex = &'regex($arg);
    next unless $from =~ /$regex/i;
    return 1;
  }
  return 0;
}

sub parse_alias {
  local($prefix, @list) = @_;
  local(%alias, $var, $arg, $key);
  %alias = ();
  foreach $line (@list) {
    ($var, $arg) = split(/\s+/, $line, 2);
    $var = "\L$var\E";
    if ($prefix) {
      $key = $prefix . '.' . $var;
    } else {
      $key = $var;
    }
    next if defined($alias{$key});
    if ($var eq 'nick') {
      $alias{$key} = (split(/\,/, $arg))[0];
    } elsif ($var eq 'name') {
      $alias{$key} = (split(/\s+/, $arg))[0];
    } else {
      $alias{$key} = $arg;
    }
  }
  return %alias;
}

sub split_list {
  local($field, @list) = @_;
  local($var, $arg, @array, @entry);
  $field = "\L$field\E";
  @array = ();
  @entry = ();
  foreach $line (@list) {
    ($var, $arg) = split(/\s*\:\s*/, $line, 2);
    if ($field eq "\L$var\E") {
      push(@array, &'list(@entry)) if @entry;
      @entry = ();
    }
    push(@entry, $var . ' ' . $arg);
  }
  push(@array, &'list(@entry)) if @entry;
  return @array;
}

sub read_file {
  local($file) = @_;
  local($name, $code, $mtime, @data, $line);
  ($name, $code) = &filename($file);
  $mtime = (stat($name))[9];
  if (defined($mtime)) {
    $modify{$name} = -1 unless defined($modify{$name});
    if ($modify{$name} != $mtime) {
      if (open(TMP, $name)) {
        @data = ();
        while (defined($line = <TMP>)) {
          $line =~ s/^\s+//;
          next if $line =~ /^[\#\;]/;
          $line =~ tr/\r\n//d;
          next unless $line;
          $line =~ s/\s+$//;
          $line = &code_euc($line, $code) if $code;
          push(@data, $line);
        }
        close(TMP);
        $modify{$name} = $mtime;
        $cache{$name} = &'list(@data);
        return @data;
      }
    } else {
      return &'array($cache{$name});
    }
  }
  return ();
}

sub filename {
  local($file) = @_;
  local($idx, $name, $code);
  return ('', '') unless $file;
  if (($idx = rindex($file, ';')) != -1) {
    $name = substr($file, 0, $idx);
    $code = substr($file, $idx + 1);
  } else {
    $name = $file;
    $code = '';
  }
  return (&'expand($name), $code);
}

sub code_euc {
  local($line, $list) = @_;
  foreach $code (split(/\,/, "\L$list\E")) {
    if ($code eq 'euc') {
      $line = &'euc_euc($line);
    } elsif ($code eq 'jis') {
      $line = &'jis_euc($line);
    } elsif ($code eq 'sjis') {
      $line = &'sjis_euc($line);
    }
  }
  return $line;
}

sub euc_code {
  local($line, $list) = @_;
  local($code);
  $code = (split(/\,/, "\L$list\E"))[0];
  if ($code eq 'euc') {
    $line = &'euc_euc($line);
  } elsif ($code eq 'jis') {
    $line = &'euc_jis($line);
  } elsif ($code eq 'sjis') {
    $line = &'euc_sjis($line);
  }
  return $line;
}

__END__

=head1 名前

auto/reply.plm - 特定の発言に反応したメッセージを発言する

=head1 説明

特定の発言に反応して、それに対するメッセージを発言します。
一つの発言に対して複数のメッセージを指定することができ、
その中からランダムでどれか一つのメッセージを発言します。
メッセージはファイルで指定し、ファイルのフォーマットは
以下のようになっています。

    こんばんわ : こんばんわ〜☆ こんばん・わん〜
    ごはん* : あたしも行く〜
    *ぷらむ* : よんだぁ? はーい☆

反応は一行に一つ記述し、反応する発言とそれに対するメッセージは
「:」とその前後に1つ以上の空白をつけて区切って指定します。
また、発言とメッセージのそれぞれは1つ以上の空白で区切ります。
反応する発言にはワイルドカードとして「*」が指定できます。

=head1 プロパティ

=over 4

=item auto.reply.file ファイル名[;({jis|euc|sjis})]

反応するメッセージを保存するファイル名を指定します。
ファイルは指定した漢字コードで保存されます。
漢字コードを複数指定した場合は、最初に指定した漢字コードで
保存され、省略した場合は「jis」を指定したことと同じです。
また、「euc」と「sjis」を同時に指定することはできません。

=item auto.random.alias ファイル名[;({jis|euc|sjis})]

エイリアスを参照するファイルを指定します。
このファイルはauto/alias.plmで使うものと同じものです。
ファイルは指定した漢字コードで保存されている必要があります。

=item auto.reply.format* フォーマット

メッセージを発言する際のフォーマットを指定します。
フォーマットに#(nick)のように指定することでエイリアス中の
対応する値で置き換えます。また#(message)でメッセージの内容に、
#(nick.now)で現在のニックネームに、#(channel)でチャンネル名に
それぞれ置き換えます。

=item auto.reply.rate 確率

発言に反応する確率を指定します。0を指定すると全く反応せず、
100を指定すると全ての発言に反応します。

=item auto.reply.add* 文字列

反応するメッセージを追加するための文字列を指定します。
文字列には反応する発言とそれに対するメッセージを
空白で区切って指定します。

=item auto.reply.remove* 文字列

反応するメッセージを削除するための文字列を指定します。
文字列には反応する発言とそれに対するメッセージを
空白で区切って指定します。

=item auto.reply.change* 文字列

反応するメッセージを変更するための文字列を指定します。
文字列には反応する発言とそれに対するメッセージを
空白で区切って指定します。

=back

=head1 設定例

    + auto/reply.plm
    auto.reply.file: reply.txt;jis
    auto.reply.format: #(name): #(message)
    auto.reply.rate: 100
    auto.reply.add: メッセージ追加
    auto.reply.remove: メッセージ削除
    auto.reply.change: メッセージ変更

「reply.txt」に書かれた内容に基づいて、発言に反応してそれに対する
メッセージを発言します。reply.txtはjisで書かれている必要があります。
また、「メッセージ追加 こんにちは こんにちは〜☆」のように発言すれば、
新たな反応を追加することができます。
同様に、「メッセージ削除 こんにちは こんにちは〜☆」や、
「メッセージ変更 こんにちは こんにち・わん〜」のように発言することで、
反応を削除したり変更することができます。

=cut
