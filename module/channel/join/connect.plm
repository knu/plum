# $Id$
# copyright (c)1998-2000 Yoshinori Hasegawa <hasegawa@madoka.org>

package channel_join_connect;

$_ = 'channel_join_connect';

sub initialize {
  $DIRECTORY = '.';
}

sub server_open {
  local($serverno) = @_;
  local($userno, $i, $chan, $key, @chan, @key, $name, $keylist);
  $userno = $'userno[$serverno];
  if (!defined($joinlist[$userno])) {
    $joinlist[$userno] = '';
    $keylist = '';
    local(%tbl, $_, $dir, $file);
    $dir = &'expand(&'property($userno, 'directory') || $DIRECTORY);
    foreach $i (&'property($userno, 'keyfile')) {
      $file = "$dir/$i";
      open(H, "< $i") || next;
      while (<H>) {
        chomp;
        ($chan, $key) = split(' ', $_, 2);
        $tbl{$chan} = $key unless defined $tbl{$chan};
      }
      close(H);
    }
    foreach $channel (&'property($userno, 'channel')) {
      ($chan, $key) = split(/\s+/, $channel, 2);
      @chan = split(/\,/, $chan);
      @key = split(/\,/, $key || '');
      for ($i = 0; $i < @chan; $i++) {
        $name = &'real($chan[$i]);
        next unless $name;
        $joinlist[$userno] = &'add($joinlist[$userno], $name);
        $key = $key[$i] || $tbl{$name};
        if ($key && !$keyword{$userno, $name}) {
          $keyword{$userno, $name} = $key;
        }
        $keylist = &'add($keylist, $keyword{$userno, $name} || '');
      }
    }
  }
  foreach $i (&'property($userno, 'operserv')) {
    &'s_print($serverno, '', 'PRIVMSG', 'OperServ', $i);
    sleep 0.5;
  }
  foreach $i (&'property($userno, 'nickserv')) {
    &'s_print($serverno, '', 'PRIVMSG', 'NickServ', $i);
    sleep 0.5;
  }
  if ($joinlist[$userno]) {
    &'s_print($serverno, '', 'JOIN', join(',', &'array($joinlist[$userno])), join(',', &'array($keylist)));
  }
  foreach $i (&'property($userno, 'chanserv')) {
    &'s_print($serverno, '', 'PRIVMSG', 'ChanServ', $i);
    sleep 0.5;
  }
}

sub module_disable {
  local($userno) = @_;
  local($no, $chan);
  undef($joinlist[$userno]);
  foreach $key (keys(%keyword)) {
    ($no, $chan) = split(/$;/, $key, 2);
    next unless $no == $userno;
    delete $keyword{$key};
  }
}

sub ss_join {
  local($serverno, $prefix, $cmd, @params) = @_;
  local($name, $mode);
  ($name, $mode) = (split(/\cG/, $params[0]), '');
  $joinlist[$'userno[$serverno]] = &'add($joinlist[$'userno[$serverno]], $name) if &'prefix($prefix) eq $'nick[$serverno];
  return ($prefix, $cmd, @params);
}

sub ss_kick {
  local($serverno, $prefix, $cmd, @params) = @_;
  $joinlist[$'userno[$serverno]] = &'remove($joinlist[$'userno[$serverno]], $params[0]) if $params[1] eq $'nick[$serverno];
  return ($prefix, $cmd, @params);
}

sub ss_part {
  local($serverno, $prefix, $cmd, @params) = @_;
  $joinlist[$'userno[$serverno]] = &'remove($joinlist[$'userno[$serverno]], $params[0]) if &'prefix($prefix) eq $'nick[$serverno];
  return ($prefix, $cmd, @params);
}

sub ss_mode {
  local($serverno, $prefix, $cmd, @params) = @_;
  local($chan, $mode, @modes, $char, $flag, $name, $i);
  ($chan, $mode, @modes) = @params;
  if (&'channel($chan)) {
    for ($i = 0; $i < length($mode); $i++) {
      $char = substr($mode, $i, 1);
      if ($char eq '+' || $char eq '-') {
        $flag = $char;
      } elsif ($char eq 'b') {
        shift(@modes);
      } elsif ($char eq 'e') {
        shift(@modes);
      } elsif ($char eq 'I') {
        shift(@modes);
      } elsif ($char eq 'k') {
        local($userno, $key, $dir);
        $userno = $'userno[$serverno];
        if ($flag eq '+') {
          $key = $keyword{$userno, $chan} = shift(@modes);
        } else {
          $key = '';
          delete $keyword{$userno, $chan};
          shift(@modes);
        }
        local($file) = &'property($userno, 'keyfile');
        $dir = &'expand(&'property($userno, 'directory') || $DIRECTORY);
        $file = "$dir/$file";
        if ($file) {
          if (open(H, "+< $file")) {
            local(@lines, $_);
            while (<H>) {
              chomp;
              local($c, $k) = split(' ', $_, 2);
              if ($c eq $chan) {
                $k = $key;
                $key = '';
              }
              push(@lines, "$c $k\n") if $k ne '';
            }
            seek(H, 0, 0);
            print H @lines;
            print H "$chan $key\n" if $key ne '';
            truncate(H, tell(H));
            close(H);
          } elsif ($key ne '' && open(H, "> $file")) {
            print H "$chan $key\n";
            close(H);
          }
        }
      } elsif ($char eq 'l') {
        if ($flag eq '+') {
          shift(@modes);
        }
      } elsif ($char eq 'O') {
        shift(@modes);
      } elsif ($char eq 'o') {
        shift(@modes);
      } elsif ($char eq 'v') {
        shift(@modes);
      }
    }
  }
  return ($prefix, $cmd, @params);
}

__END__

=head1 名前

channel/join/connect.plm - サーバに接続したときに指定したチャンネルに入る

=head1 説明

サーバに接続したときに、指定したチャンネルに入ります。
サーバとの接続が切れて再び接続し直したときは、
指定したチャンネルとは関係なく、
接続が切れる前に入っていたチャンネルに入ります。

=head1 プロパティ

=over 4

=item channel.join.connect.nickserv* (メッセージ)

サーバに接続したときに nickserv に送るメッセージを指定します。
メッセージはチャンネルに入る前に送られます。

=item channel.join.connect.operserv* (メッセージ)

サーバに接続したときに operserv に送るメッセージを指定します。
メッセージはチャンネルに入る前に送られます。

=item channel.join.connect.channel* (チャンネル) (キー)

サーバに接続したときに入るチャンネルを指定します。
チャンネルのキーが指定されているときは、そのキーを使います。

=item channel.join.connect.chanserv* (メッセージ)

チャンネルに入った直後に chanserv に送るメッセージを指定します。

=item channel.join.connect.keyfile* (ファイル名)

チャンネルとキーの対を読み込み、またキーの変更(mode +k)にしたがって
保存するファイルを指定します。ファイルの形式は、行ごとにスペースで
区切ってチャンネル名とキーを並べたものです。

複数指定した場合、すべてのファイルからチャンネル名とキーの対を
読み込みますが、最初に指定したファイルのみが更新対象になります。

(注意)
キーファイルが読み込まれるのはモジュールがロードされたとき
のみです。接続中にキーファイルを書き換えても内部状態には
反映されません。

=back

=head1 設定例

    + channel/join/connect.plm
    channel.join.connect.channel: #まどか mdk

サーバに接続したときに、「#まどか」に「mdk」というキーで入ります。

    + channel/join/connect.plm
    channel.join.connect.channel: #まどか:*.jp,#ぷらむ:*.jp
    channel.join.connect.channel: #ぷらむ

サーバに接続したときに、「#まどか:*.jp」、「#ぷらむ:*.jp」、
「#ぷらむ」の3つのチャンネルに入ります。

    + channel/join/connect.plm
    channel.join.connect.nickserv: identify foobar
    channel.join.connect.channel: #somechannel
    channel.join.connect.chanserv: op #somechannel

nickserv サービスに登録されたニックを認証し、 #somechannel に入った後、
chanserv に op を要求します。

    + channel/join/connect.plm
    channel.join.connect.keyfile: plum.key

ファイル plum.key からチャンネルとキーの対を読み込み、また変更に
応じて保存します。

=cut
