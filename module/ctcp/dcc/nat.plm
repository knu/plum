# $Id$
# copyright (c)1998-2000 Yoshinori Hasegawa <hasegawa@madoka.org>

package ctcp_dcc_nat;

$_ = 'ctcp_dcc_nat';

sub initialize {
}

sub cpcs_dcc {
  local($clientno, $prefix, $cmd, @params) = @_;
  local($userno, @args, $ip, $from, $to, $peer, $host, $addr);
  $userno = $'userno[$clientno];
  @args = split(/\s+/, $params[1]);
  $ip = &'address($args[2]);
  foreach $map (&'property($userno, 'mapping')) {
    ($from, $to) = split(/\s+/, $map);
    next unless $to;
    next unless $ip eq &'address($from);
    $addr = &'address($to);
    if (length($addr) == 4) {
      $args[2] = unpack('N', $addr);
    } elsif (length($addr) == 16) {
      $args[2] = join(':', unpack('H4' x 8, $addr));
    }
    $params[1] = join(' ', @args);
    return ($prefix, $cmd, @params);
  }
  if (&check_private($userno, $ip)) {
    $peer = (&'peername($clientno))[1];
    if (&check_private($userno, $peer)) {
      $host = (split(/\@/, &'user($'server[$clientno]), 2))[1];
      $addr = &'address($host);
      if ($addr) {
        if (length($addr) == 4) {
          $args[2] = unpack('N', $addr);
        } elsif (length($addr) == 16) {
          $args[2] = join(':', unpack('H4' x 8, $addr));
        }
        $params[1] = join(' ', @args);
      }
    } else {
      if (length($peer) == 4) {
        $args[2] = unpack('N', $peer);
      } elsif (length($peer) == 16) {
        $args[2] = join(':', unpack('H4' x 8, $peer));
      }
      $params[1] = join(' ', @args);
    }
  }
  return ($prefix, $cmd, @params);
}

sub check_private {
  local($userno, $ip) = @_;
  local($start, $end, $addr);
  foreach $private (&'property($userno, 'private')) {
    ($start, $end) = split(/\s+/, $private);
    next unless $end;
    $addr = &'address($start);
    next unless length($ip) == length($addr);
    next unless $ip ge $addr;
    $addr = &'address($end);
    next unless length($ip) == length($addr);
    next unless $ip le $addr;
    return 1;
  }
  return 0;
}

